{"ast":null,"code":"import _defineProperty from \"/home/jonatanMelzer/products-search-store/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { DestroyRef, inject, signal } from '@angular/core';\nimport { defaultEqualityFn } from './select-signal';\nimport { signalStateUpdateFactory } from './signal-state';\nimport * as i0 from \"@angular/core\";\nexport function signalStore(...args) {\n  var _class;\n  const signalStoreArgs = [...args];\n  const config = 'providedIn' in signalStoreArgs[0] ? signalStoreArgs.shift() : {};\n  const features = signalStoreArgs;\n  class SignalStore {\n    constructor() {\n      const {\n        signalStore,\n        hooks\n      } = signalStoreFactory(features);\n      for (const key in signalStore) {\n        this[key] = signalStore[key];\n      }\n      hooks.onInit?.();\n      if (hooks.onDestroy) {\n        inject(DestroyRef).onDestroy(() => hooks.onDestroy());\n      }\n    }\n  }\n  _class = SignalStore;\n  _defineProperty(SignalStore, \"\\u0275fac\", function SignalStore_Factory(t) {\n    return new (t || _class)();\n  });\n  _defineProperty(SignalStore, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: config.providedIn || null\n  }));\n  return SignalStore;\n}\nfunction signalStoreFactory(features) {\n  const stateSignal = signal({}, {\n    equal: defaultEqualityFn\n  });\n  const innerStore = features.reduce((store, feature) => feature(store), {\n    internals: {\n      $state: stateSignal.asReadonly(),\n      $update: signalStateUpdateFactory(stateSignal)\n    },\n    slices: {},\n    signals: {},\n    methods: {},\n    hooks: {}\n  });\n  return {\n    signalStore: {\n      ...innerStore.internals,\n      ...innerStore.slices,\n      ...innerStore.signals,\n      ...innerStore.methods\n    },\n    hooks: innerStore.hooks\n  };\n}","map":{"version":3,"names":["DestroyRef","inject","signal","defaultEqualityFn","signalStateUpdateFactory","signalStore","args","_class","signalStoreArgs","config","shift","features","SignalStore","constructor","hooks","signalStoreFactory","key","onInit","onDestroy","_defineProperty","factory","ɵfac","providedIn","stateSignal","equal","innerStore","reduce","store","feature","internals","$state","asReadonly","$update","slices","signals","methods"],"sources":["/home/jonatanMelzer/products-search-store/src/lib/signal-store.ts"],"sourcesContent":["import { DestroyRef, inject, Injectable, signal, Type } from '@angular/core';\nimport { defaultEqualityFn } from './select-signal';\nimport {\n  EmptyFeatureResult,\n  InnerSignalStore,\n  MergeFeatureResults,\n  SignalStore,\n  SignalStoreConfig,\n  SignalStoreFeature,\n  SignalStoreHooks,\n  SignalStoreFeatureResult,\n} from './signal-store-models';\nimport { signalStateUpdateFactory } from './signal-state';\n\nexport function signalStore<F1 extends SignalStoreFeatureResult>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>\n): Type<SignalStore<F1>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>\n): Type<SignalStore<MergeFeatureResults<[F1, F2]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult,\n  F8 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>,\n  f8: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>, F8>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7, F8]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult,\n  F8 extends SignalStoreFeatureResult,\n  F9 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>,\n  f8: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>, F8>,\n  f9: SignalStoreFeature<\n    MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7, F8]>,\n    F9\n  >\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7, F8, F9]>>>;\n\nexport function signalStore<F1 extends SignalStoreFeatureResult>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>\n): Type<SignalStore<F1>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>\n): Type<SignalStore<MergeFeatureResults<[F1, F2]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult,\n  F8 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>,\n  f8: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>, F8>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7, F8]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult,\n  F8 extends SignalStoreFeatureResult,\n  F9 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>,\n  f8: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>, F8>,\n  f9: SignalStoreFeature<\n    MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7, F8]>,\n    F9\n  >\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7, F8, F9]>>>;\n\nexport function signalStore(\n  ...args: [SignalStoreConfig, ...SignalStoreFeature[]] | SignalStoreFeature[]\n): Type<SignalStore<any>> {\n  const signalStoreArgs = [...args];\n\n  const config: Partial<SignalStoreConfig> =\n    'providedIn' in signalStoreArgs[0]\n      ? (signalStoreArgs.shift() as SignalStoreConfig)\n      : {};\n  const features = signalStoreArgs as SignalStoreFeature[];\n\n  @Injectable({ providedIn: config.providedIn || null })\n  class SignalStore {\n    constructor() {\n      const { signalStore, hooks } = signalStoreFactory(features);\n\n      for (const key in signalStore) {\n        (this as any)[key] = signalStore[key];\n      }\n\n      hooks.onInit?.();\n\n      if (hooks.onDestroy) {\n        inject(DestroyRef).onDestroy(() => hooks.onDestroy!());\n      }\n    }\n  }\n\n  return SignalStore;\n}\n\nfunction signalStoreFactory(features: SignalStoreFeature[]): {\n  signalStore: SignalStore<any>;\n  hooks: SignalStoreHooks;\n} {\n  const stateSignal = signal<Record<string, unknown>>(\n    {},\n    { equal: defaultEqualityFn }\n  );\n\n  const innerStore = features.reduce<InnerSignalStore>(\n    (store, feature) => feature(store),\n    {\n      internals: {\n        $state: stateSignal.asReadonly(),\n        $update: signalStateUpdateFactory(stateSignal),\n      },\n      slices: {},\n      signals: {},\n      methods: {},\n      hooks: {},\n    }\n  );\n\n  return {\n    signalStore: {\n      ...innerStore.internals,\n      ...innerStore.slices,\n      ...innerStore.signals,\n      ...innerStore.methods,\n    },\n    hooks: innerStore.hooks,\n  };\n}\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,MAAM,EAAcC,MAAM,QAAc,eAAe;AAC5E,SAASC,iBAAiB,QAAQ,iBAAiB;AAWnD,SAASC,wBAAwB,QAAQ,gBAAgB;;AAyPzD,OAAM,SAAUC,WAAWA,CACzB,GAAGC,IAAyE;EAAA,IAAAC,MAAA;EAE5E,MAAMC,eAAe,GAAG,CAAC,GAAGF,IAAI,CAAC;EAEjC,MAAMG,MAAM,GACV,YAAY,IAAID,eAAe,CAAC,CAAC,CAAC,GAC7BA,eAAe,CAACE,KAAK,EAAwB,GAC9C,EAAE;EACR,MAAMC,QAAQ,GAAGH,eAAuC;EAExD,MACMI,WAAW;IACfC,YAAA;MACE,MAAM;QAAER,WAAW;QAAES;MAAK,CAAE,GAAGC,kBAAkB,CAACJ,QAAQ,CAAC;MAE3D,KAAK,MAAMK,GAAG,IAAIX,WAAW,EAAE;QAC5B,IAAY,CAACW,GAAG,CAAC,GAAGX,WAAW,CAACW,GAAG,CAAC;;MAGvCF,KAAK,CAACG,MAAM,GAAE,CAAE;MAEhB,IAAIH,KAAK,CAACI,SAAS,EAAE;QACnBjB,MAAM,CAACD,UAAU,CAAC,CAACkB,SAAS,CAAC,MAAMJ,KAAK,CAACI,SAAU,EAAE,CAAC;;IAE1D;;WAbIN,WAAW;EAAAO,eAAA,CAAXP,WAAW,e;qBAAXA,MAAW;EAAA;EAAAO,eAAA,CAAXP,WAAW,gB;WAAXA,MAAW;IAAAQ,OAAA,EAAXR,MAAW,CAAAS,IAAA;IAAAC,UAAA,EADSb,MAAM,CAACa,UAAU,IAAI;EAAI;EAiBnD,OAAOV,WAAW;;AAGpB,SAASG,kBAAkBA,CAACJ,QAA8B;EAIxD,MAAMY,WAAW,GAAGrB,MAAM,CACxB,EAAE,EACF;IAAEsB,KAAK,EAAErB;EAAiB,CAAE,CAC7B;EAED,MAAMsB,UAAU,GAAGd,QAAQ,CAACe,MAAM,CAChC,CAACC,KAAK,EAAEC,OAAO,KAAKA,OAAO,CAACD,KAAK,CAAC,EAClC;IACEE,SAAS,EAAE;MACTC,MAAM,EAAEP,WAAW,CAACQ,UAAU,EAAE;MAChCC,OAAO,EAAE5B,wBAAwB,CAACmB,WAAW;KAC9C;IACDU,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,EAAE;IACXrB,KAAK,EAAE;GACR,CACF;EAED,OAAO;IACLT,WAAW,EAAE;MACX,GAAGoB,UAAU,CAACI,SAAS;MACvB,GAAGJ,UAAU,CAACQ,MAAM;MACpB,GAAGR,UAAU,CAACS,OAAO;MACrB,GAAGT,UAAU,CAACU;KACf;IACDrB,KAAK,EAAEW,UAAU,CAACX;GACnB;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}