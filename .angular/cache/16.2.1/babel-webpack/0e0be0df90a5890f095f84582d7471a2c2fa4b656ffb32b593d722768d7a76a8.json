{"ast":null,"code":"import { selectSignal } from '../select-signal';\nimport { toDeepSignal } from '../deep-signal';\nimport { excludeKeys } from './helpers';\nexport function withState(stateOrFactory) {\n  return store => {\n    const state = typeof stateOrFactory === 'function' ? stateOrFactory() : stateOrFactory;\n    const stateKeys = Object.keys(state);\n    store.internals.$update(state);\n    const slices = stateKeys.reduce((acc, key) => {\n      const slice = selectSignal(() => store.internals.$state()[key]);\n      return {\n        ...acc,\n        [key]: toDeepSignal(slice)\n      };\n    }, {});\n    const signals = excludeKeys(store.signals, stateKeys);\n    const methods = excludeKeys(store.methods, stateKeys);\n    return {\n      ...store,\n      slices: {\n        ...store.slices,\n        ...slices\n      },\n      signals,\n      methods\n    };\n  };\n}","map":{"version":3,"names":["selectSignal","toDeepSignal","excludeKeys","withState","stateOrFactory","store","state","stateKeys","Object","keys","internals","$update","slices","reduce","acc","key","slice","$state","signals","methods"],"sources":["/home/jonatanMelzer/products-search-store/src/lib/base-features/with-state.ts"],"sourcesContent":["import {\n  EmptyFeatureResult,\n  InnerSignalStore,\n  SignalsDictionary,\n  SignalStoreFeature,\n  SignalStoreFeatureResult,\n} from '../signal-store-models';\nimport { NotAllowedStateCheck } from '../signal-state-models';\nimport { selectSignal } from '../select-signal';\nimport { toDeepSignal } from '../deep-signal';\nimport { excludeKeys } from './helpers';\n\nexport function withState<State extends Record<string, unknown>>(\n  state: State & NotAllowedStateCheck<State>\n): SignalStoreFeature<\n  EmptyFeatureResult,\n  EmptyFeatureResult & {\n    state: State;\n  }\n>;\nexport function withState<State extends Record<string, unknown>>(\n  stateFactory: () => State & NotAllowedStateCheck<State>\n): SignalStoreFeature<\n  EmptyFeatureResult,\n  EmptyFeatureResult & {\n    state: State;\n  }\n>;\nexport function withState<State extends Record<string, unknown>>(\n  stateOrFactory: State | (() => State)\n): SignalStoreFeature<\n  SignalStoreFeatureResult,\n  EmptyFeatureResult & { state: State }\n> {\n  return (store) => {\n    const state =\n      typeof stateOrFactory === 'function' ? stateOrFactory() : stateOrFactory;\n    const stateKeys = Object.keys(state);\n\n    store.internals.$update(state);\n\n    const slices = stateKeys.reduce((acc, key) => {\n      const slice = selectSignal(() => store.internals.$state()[key]);\n      return { ...acc, [key]: toDeepSignal(slice) };\n    }, {} as SignalsDictionary);\n    const signals = excludeKeys(store.signals, stateKeys);\n    const methods = excludeKeys(store.methods, stateKeys);\n\n    return {\n      ...store,\n      slices: { ...store.slices, ...slices },\n      signals,\n      methods,\n    } as InnerSignalStore<State>;\n  };\n}\n"],"mappings":"AAQA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,WAAW,QAAQ,WAAW;AAkBvC,OAAM,SAAUC,SAASA,CACvBC,cAAqC;EAKrC,OAAQC,KAAK,IAAI;IACf,MAAMC,KAAK,GACT,OAAOF,cAAc,KAAK,UAAU,GAAGA,cAAc,EAAE,GAAGA,cAAc;IAC1E,MAAMG,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC;IAEpCD,KAAK,CAACK,SAAS,CAACC,OAAO,CAACL,KAAK,CAAC;IAE9B,MAAMM,MAAM,GAAGL,SAAS,CAACM,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAI;MAC3C,MAAMC,KAAK,GAAGhB,YAAY,CAAC,MAAMK,KAAK,CAACK,SAAS,CAACO,MAAM,EAAE,CAACF,GAAG,CAAC,CAAC;MAC/D,OAAO;QAAE,GAAGD,GAAG;QAAE,CAACC,GAAG,GAAGd,YAAY,CAACe,KAAK;MAAC,CAAE;IAC/C,CAAC,EAAE,EAAuB,CAAC;IAC3B,MAAME,OAAO,GAAGhB,WAAW,CAACG,KAAK,CAACa,OAAO,EAAEX,SAAS,CAAC;IACrD,MAAMY,OAAO,GAAGjB,WAAW,CAACG,KAAK,CAACc,OAAO,EAAEZ,SAAS,CAAC;IAErD,OAAO;MACL,GAAGF,KAAK;MACRO,MAAM,EAAE;QAAE,GAAGP,KAAK,CAACO,MAAM;QAAE,GAAGA;MAAM,CAAE;MACtCM,OAAO;MACPC;KAC0B;EAC9B,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}